/*
* 1.什么是JavaScript？
* 1. 一种脚本语言，用于在页面中被加载时自动执行。
* 2. 创建此语言时最初叫"LiveScript"，为了蹭Java热度。
* 3. 随着发展，拥有了自己的语言规范"ECMAScript"。
* 4. 由于node.js的出现，JS可以运行在服务器端了。
* */


/*
* 2.JavaScript为什么可以运行在浏览器中？
* 因为浏览器中嵌入了JavaScript引擎（有时也叫"JavaScript虚拟机"），所有的JS代码都可以在引擎上执行。
* */


/*
* 3.不同引擎有不同的代号，常见引擎和代号有哪些？
* - V8：Chrome、Opera、Edge浏览器中的JS引擎。
* - SpiderMonkey：Firefox浏览器中的JS引擎。
* - Chakra：IE浏览器
* - JavaScriptCore，Nitro，SquirrelFish：Safari浏览器
* */


/*
* 4.JS引擎是如何工作的？
* 以浏览器为例
* 1. 引擎读取（或解析）JS脚本。
* 2. 然后，引擎将脚本编译为机器语言。
* 3. 机器代码快速执行。
* */


/*
* 5.浏览器中的JS能做什么？
* 1. 因为最初是为浏览器创建的，所以无法提供对内容或CPU的访问。
* 2. JS的能力取决于他的运行环境，例如，node.js支持读写文件、执行网络请求等函数。
* 3. 修改网页已有内容和网页的样式。
* 4. 响应用户行为，响应鼠标点击、指针的移动、按键的移动。
* 5. 向服务器发送网络请求(AJAX)、下载和上传文件(COMET)
* 6. 获取或设置cookie
* 7. 记住客户端的数据（浏览器本地存储(LocalStorage)）
* */


/*
* 6.浏览器中的JS不能做什么？
* 1. 网页中的JS不能操作硬盘上的任意文件。它没有直接访问操作系统的功能。
* 2. 不同的标签页/窗口之间无法互通。
* */


/*
* 7.基于JS的语言
* - CoffeeScript：是JS的语法糖，引入了更简短的语法。
* - TypeScript：专注于添加"严格的数据类型"以简化开发，以更好的支持复杂系统的开发。由微软开发。
* - Flow：也添加了数据类型，但是以一种不同的方式。由Facebook开发。
* - Dart：一门独立的语言，拥有自己的引擎，该引擎可以用于手机应用，也可以被编译成JS。由Google开发。
* - Brython：是一个Python到JS的转译器，让我们可以在不适用JS的情况下，以纯Python编写应用。
* - Kotlin：一个现代、简介且安全的变成语言，编写出的应用可以在浏览器和node环境中运行.
* */


/*
* 8.Mock工具
* 1. 模拟前端发起请求，类似于Postman、APIPost等
* 2. API管理、测试功能
* 3. 通过插件广场帮助你将API发布到各个应用平台，比如发布到网关上完成API上线。
* */